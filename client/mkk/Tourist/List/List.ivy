expr {=
from fir.controls.utils import cls, firScopeOptsEnc, isInRoles, hasRight;
from fir.controls.Pagination import Pagination;
var
	instanceName: 'touristList'
	cssBaseClass: 'mkk-TouristList';
def TouristList {=
	def.kv
		moduleName: 'mkk/Tourist/List/List'
		instanceName: instanceName
		cssBaseClass: cssBaseClass
		touristList: null
		nav: null
		filter: null;
	def.body {*
	<div class="{=cls 'block'}" data-fir-module="{{moduleName}}">
		<input type="hidden" data-fir-opts="{=firScopeOptsEnc}"/>
		{=set isAuthorized: {=isInRoles ['admin', 'moder']} }
		<h2>Туристы</h2>
		<form method="post">
			<div class="{=cls 'filter'} row align-items-end">
				<label class="col-auto form-group">
					<span class="mr-2">Фамилия И. О.</span>
					<div class="form-inline flex-nowrap d-sm-inline-flex">
						<input type="text"
							name="familyName"
							class="{=cls 'familyNameField' 'form-control'}"
							value="{{filter.familyName}}"
							placeholder="Смирнов"/>
						<input type="text"
							name="givenName"
							maxlength="1"
							class="{=cls 'givenNameField' 'form-control'}"
							value="{{filter.givenName}}"
							placeholder="И"/>
						<input type="text"
							name="patronymic"
							maxlength="1"
							class="{=cls 'patronymicField' 'form-control'}"
							value="{{filter.patronymic}}"
							placeholder="П"/>
					</div>
				</label>
				<div class="col form-group">
					<button type="submit" name="act" class="btn btn-block btn-primary">Найти</button>
				</div>
			</div>
			<div class="{=cls 'tableBar'} row">
				<div class="{=cls 'pagination'} col-auto form-group">
					{=Pagination
						instanceName: instanceName ~ 'Paging'
						pageSizeFormField: 'pageSize'
						offset: nav.offset
						recordCount: nav.recordCount
						pageSize: nav.pageSize or 10
					}
				</div>
				{=if {=hasRight obj: 'tourist.item' kind: 'add'} {*
				<div class="col form-group text-right">
					<a href="{{vpaths.siteDynamic}}tourist/edit"
						class="btn btn-primary"
						>Добавить туриста</a>
				</div>
				*}}
			</div>
			
		</form>
		<div class="{=cls 'tableBlock'} mkk-Table">
			<div class="{=cls 'tableScroller'} mkk-Table">
				<table class="{=cls 'table'} mkk-Table">
					<tbody class="{=cls 'tableHeaderBody'} mkk-Table">
						<tr class="{=cls 'tableHeaderRow'} mkk-Table">
						{=
							var fieldNames: {=
								if {=hasRight obj: 'tourist.item' kind: 'edit'}
									["№", "Имя, дата рожд.", "Опыт", "Спорт. разряд, cуд. категория", "Комментарий", "Изм"]
								else
									["Имя, дата рожд.", "Опыт", "Спорт. разряд, cуд. категория", "Комментарий"]
							};
							repeat title in fieldNames {*<th>{{title}}</th>*}
						}
						</tr>
					</tbody>
					<!-- Основное тело таблицы -->
					{=TouristListTable
						instanceName: instanceName
						cssBaseClass: cssBaseClass
						touristList: touristList
					}
				</table>
			</div>
		</div>
	</div>
	*};
};

def TouristListTable {=
	def.kv
		instanceName: instanceName
		cssBaseClass: cssBaseClass
		touristList;
	def.body {*
	<tbody class="{=cls 'tableContentBody'} mkk-Table" data-fir-view-method="{{__scopeName__}}">
		{%
			repeat it in touristList {*
			<tr>
			{=if {=hasRight obj: 'tourist.item' kind: 'edit'} {*
				<td>{{it.num}}</td>
			*}}
				<td>{{it.familyName}} {{it.givenName}} {{it.patronymic}}</td>
				<td>
					<a href="/dyn/tourist/experience?num={{it.num}}"
						>{{it.experience or "???"}}</a>
				</td>
				<td>
					<div>{{it.sportsCategory.name}}</div>
					<div>{{it.refereeCategory.name}}</div>
				</td>
				<td>{{it.comment}}</td>
			{=if {=hasRight obj: 'tourist.item' kind: 'edit'} {*
				<td>
					<a href="/dyn/tourist/edit?num={{it.num}}"
						class="mkk-Document e-itemEditBtn"
						title="Изменить"></a>
				</td>
			*}}
			</tr>
			*};
		}
	</tbody>
	*}
};
}