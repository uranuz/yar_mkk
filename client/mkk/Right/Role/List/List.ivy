expr {
from fir.controls.utils import cls, firScopeOptsEnc;
from fir.controls.Paging import Paging;
from fir.controls.OpenDialog import OpenDialog;
var
	cssBaseClass: "mkk-RightRoleList"
	instanceName: "rightRoleList"
	RPCMethod: 'right.role.list'
	fieldsToSend: ['roleList', 'nav', 'isSelect'];
def RightRoleList {=
	def.kv
		moduleName: "mkk/Right/Role/List/List"
		cssBaseClass: cssBaseClass
		instanceName: instanceName
		RPCMethod: RPCMethod
		requestURI: "/api/right/role/list"
		roleList: null
		nav: null
		isSelect: false;
	def.body {*
		<div class="{=cls 'block'}" data-fir-module="{{moduleName}}">
			<input type="hidden" data-fir-opts="{=firScopeOptsEnc fields: fieldsToSend}"/>
			<h2>Роли доступа</h2>
			<div class="form-group row">
				<label class="col d-flex align-items-center">
					<span class="mr-2">Найти</span>
					<input type="text"
						class="{=cls 'nameField'} form-control"
						name="name"/>
				</label>
				<div class="col-auto">
					<button type="button"
						class="{=cls 'searchBtn'} btn btn-primary"
						>Искать</button>
				</div>
			</div>
			<div class="form-group">
				{=Paging
					instanceName: instanceName ~ 'Paging'
					nav: nav
				}
			</div>
			{=if not isSelect {*
			<div class="form-group">
				<button type="button"
					class="{=cls 'addRoleBtn'} btn btn-primary"
					>Добавить</button>
			</div>
			*} }
			{=RightRoleListView
				cssBaseClass: cssBaseClass
				instanceName: instanceName
				RPCMethod: RPCMethod
				roleList: roleList
				nav: nav
				isSelect: isSelect
			}
			{=OpenDialog
				instanceName: 'rightRoleEditDlg'
				config: {
					ivyModule: 'mkk.Right.Role.Edit',
					ivyMethod: 'RightRoleEdit',
					dialogOpts: {
						title: 'Редактировать роль доступа',
						width: 400
					}
				}
			}
			{=OpenDialog
				instanceName: 'rightRoleDeleteDlg'
				config: {
					ivyModule: 'mkk.Helpers.DeleteConfirm',
					ivyMethod: 'DeleteConfirm'
				}
			}
		</div>
	*}
};
def RightRoleListView {=
	def.kv
		cssBaseClass: cssBaseClass
		instanceName: instanceName
		RPCMethod: RPCMethod
		roleList: null
		nav: null
		isSelect: false;
	def.body {*
		<div class="{=cls 'listView'}" data-ivy-method="{{_ivyMethod}}">
			<input type="hidden" data-fir-opts="{=firScopeOptsEnc fields: fieldsToSend}"/>
			<div class="{=cls 'roleList'}">
			{=repeat rec in roleList {*
				<div class="row">
					<div class="col">
						<a href="{{vpaths.siteDynamic}}right/role/rights?num={{rec.num}}">{{rec.name}}</a>
					</div>
					<div class="col">{{rec.description}}</div>
					{=if isSelect {*
					<div class="col-auto">
						<div
							class="{=cls 'itemActionBtn'} g-icon-small g-icon-addItem"
							title="Выбрать"
							data-mkk-action="selectRole"
							data-record-num="{{rec.num}}"></div>
					</div>
					*} else {*
					<div class="col-auto">
						<div
							class="{=cls 'itemActionBtn'} g-icon-small g-icon-removeItem"
							title="Удалить"
							data-mkk-action="removeRole"
							data-record-num="{{rec.num}}"></div>
					</div>
					<div class="col-auto">
						<div
							class="{=cls 'itemActionBtn'} g-icon-small g-icon-editItem"
							title="Изменить"
							data-mkk-action="editRole"
							data-record-num="{{rec.num}}"></div>
					</div>
					*}}
					
				</div>
			*} }
			</div>
		</div>
	*}
};
}