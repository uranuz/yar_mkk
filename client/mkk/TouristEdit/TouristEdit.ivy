expr {=
from fir.controls.utils import recGet, recGetStr, cls, rsFieldFormat, enumWithNull, firScopeOptsEnc, hasRight, isInRoles;
from fir.controls.PlainDatePicker import PlainDatePicker;
from fir.controls.PlainListBox import PlainListBox;
from mkk.TouristPlainList import TouristPlainList;
from mkk.PohodEdit.DeleteArea import DeleteArea;

def LabeledInput {=
	def.kv caption field appendix: null;
	def.body noscope{*
	<div class="form-group row align-items-center">
		<label class="col-md-3 col-form-label" for="{{field ~ 'Field'}}">{{caption}}</label>
		<div class="col-md-6">
			<input type="text"
				name="{{field}}"
				class="{=cls field} form-control"
				value="{=recGet tourist field}"
				id="{{field ~ 'Field'}}"
				{=if not{=hasRight subobj: field kind: 'edit'} and not isNewUserDialog 'disabled'}/>
		</div>
		<div class="col-auto px-1">{{appendix}}</div>
	</div>
	*};
};

def ShowCheckBox {=
	def.kv caption: 'Показать всем' field;
	def.body noscope{*
		<div class="form-check">
			<input type="checkbox"
				name="{{field}}"
				class="{=cls field} form-check-input"
				id="{{field ~ 'Field'}}"
				{=if {=recGet tourist field} 'checked'}
				{=if not{=hasRight subobj: field kind: 'edit'} and not isNewUserDialog 'disabled'}/>
			<label class="form-check-label" for="{{field ~ 'Field'}}">{{caption}}</label>
		</div>
	*};
};

def ListBoxRow {=
	def.kv caption field;
	def.body noscope{*
		<div class="form-group row">
			<label class="col-md-3 col-form-label">{{caption}}</label>
			<div class="col-md-6">
				{=PlainListBox
					instanceName: field ~ 'Field'
					formField: field
					idField: 'v'
					captionField: 'n'
					items: {=enumWithNull
						{=at {=rsFieldFormat tourist field} 'enum'} 'не задано'}
					selectedId: {=recGet tourist field}
					disabled: not{=hasRight subobj: field kind: 'edit'} and not isNewUserDialog
				}
			</div>
		</div>
	*}
};

def TouristEdit {=
	def.kv
		moduleName: 'mkk/TouristEdit/TouristEdit'
		instanceName: 'touristEdit'
		cssBaseClass: 'mkk-TouristEdit'
		accessObject: 'tourist.item'
		tourist: tourist
		isEditDialog: true
		isNewUserDialog: false;
	def.body {*
	<div class="{=cls 'block'}" data-fir-module="{{moduleName}}">
		<input type="hidden" data-fir-opts="{=firScopeOptsEnc}"/>
		<div class="{=cls 'topButtons'}">
			{=if isEditDialog {*
			{=if {=isInRoles ['admin', 'moder']} {*
			<a href="{{vpaths.siteDynamic}}tourist/history?num={=recGet tourist 'num'}"
				class="btn btn-sm btn-secondary"
				>История</a>
			*}}
			<a href="{{vpaths.siteDynamic}}tourist/experience?num={=recGet tourist 'num'}"
				class="btn btn-sm btn-secondary"
				>Просмотр</a>
			*} }
		</div>
		{=if isEditDialog {*<form class="{=cls 'touristForm'} form" method="POST">*} }
			{=if isEditDialog {*<h2>Редактирование данных туриста</h2>*} }
			<input type="hidden" name="num" value="{=recGet tourist 'num'}"/>
			{%
				LabeledInput caption: 'Фамилия' field: 'familyName';
				LabeledInput caption: 'Имя' field: 'givenName';
				LabeledInput caption: 'Отчество' field: 'patronymic';
			}
			<div class="form-group row">
				<label class="col-md-3 col-form-label">Дата рождения</label>
				<div class="col-md-8">
					{=PlainDatePicker
						instanceName: 'birthDateField'
						dayFormField: 'birthDay'
						monthFormField: 'birthMonth'
						yearFormField: 'birthYear'
						day: {=recGet tourist 'birthDay'}
						month: {=recGet tourist 'birthMonth'}
						year: {=recGet tourist 'birthYear'}
						disabled: not{=hasRight subobj: 'birthDate' kind: 'edit'} and not isNewUserDialog
					}
				</div>
			</div>
			{=if isEditDialog {%
				LabeledInput caption: 'Адрес проживания' field: 'address';
				LabeledInput
					caption: 'Номер телефона' field: 'phone'
					appendix: {=ShowCheckBox field: 'showPhone'};
				LabeledInput
					caption: 'Электронная почта' field: 'email'
					appendix: {=ShowCheckBox field: 'showEmail'};
				LabeledInput caption: 'Туристский опыт' field: 'experience'
			} }
			<div class="form-group row">
				<label class="col-md-3 col-form-label" for="commentField">Комментарий</label>
				<div class="col-md-9">
					<textarea
						name="comment"
						class="form-control"
						id="commentField"
						{=if not{=hasRight subobj: 'comment' kind: 'edit'} and not isNewUserDialog 'disabled'}
						>{=recGet tourist 'comment'}</textarea>
				</div>
			</div>
			{%
				ListBoxRow caption: 'Спортивный разряд' field: 'sportsCategory';
				ListBoxRow caption: 'Судейская категория' field: 'refereeCategory'
			}
			<input type="hidden" name="action" value="write"/>
			<hr/>
			{=if isEditDialog {*
			<div class="form-group row justify-content-between">
				<span class="col-auto">
					<button type="button"
						class="{=cls 'submitBtn'} btn btn-primary"
						>Сохранить</button>
				</span>
				<span class="col-auto">
					{=if {=hasRight kind: 'delete'} {*
					<button type="button"
						class="{=cls 'deleteDialogBtn'} btn btn-secondary"
						>Удалить туриста</button>
					*}}
				</span>
			</div>
			*}}
		{=if isEditDialog {*</form>*} }

	{=if isEditDialog {*
		{=DeleteArea
			instanceName: 'touristDeleteArea'
			deleteWhat: 'туриста'
		}
		<div class="{=cls 'similarsDlg'}">
			<div class="{=cls 'similarsMsg'}">
				В базе данных найдены похожие туристы. Возможно, добавляемый турист уже имеется в базе.
				Если это так, можно перейти к его редактированию. Если новый турист ещё не существует,
				можно продолжить добавление.
			</div>
			<div class="{=cls 'similarsBlock'}">
				{=TouristPlainList
					instanceName: 'similarsList'
					touristList: []
					mode: null
				}
			</div>
			<button type="button"
				class="{=cls 'forceSubmitBtn'} btn btn-primary"
				>Продолжить добавление</button>
		</div>
	*}}
	</div>
	*}
};
if __scopeName__ == 'main' {=
	if {=isInRoles ['admin', 'moder']} {=
		TouristEdit tourist: tourist
	} else {*
		<h4>
			Для редактирования данных туриста требуется
			<a href="/dyn/auth" title="Аутентификация">выполнить вход</a>
			на сайт
		</h4>
	*}
}
}